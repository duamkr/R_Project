html_node('div.score_result') %>%
html_nodes('li') -> lis
for (li in lis) {
score <- c(score, html_node(li, '.star_score') %>% html_text('em') %>% trim())
li %>%
html_node('.score_reple') %>%
html_text('p') %>%
trim() -> tmp
idx <- str_locate(tmp, "\r")
review <- c(review, str_sub(tmp, 1, idx[1]-1))
tmp <- trim(str_sub(tmp, idx[1], -1))
idx <- str_locate(tmp, "\r")
user <- c(user, str_sub(tmp, 1, idx[1]-1))
tmp <- trim(str_sub(tmp, idx[1], -1))
idx <- str_locate(tmp, "\r")
w_date <- c(w_date, str_sub(tmp, 1, idx[1]-1))
}
user
total_page
score  <- c()
review <- c()
user   <- c()
w_date <- c()
for ( i in 1:total_page) {
total_url <- paste0(base_url, page_url, i)
html3 <- read_html(total_url)
html3 %>%
html_node('div.score_result') %>%
html_nodes('li') -> lis
for (li in lis) {
score <- c(score, html_node(li, '.star_score') %>% html_text('em') %>% trim())
li %>%
html_node('.score_reple') %>%
html_text('p') %>%
trim() -> tmp
idx <- str_locate(tmp, "\r")
review <- c(review, str_sub(tmp, 1, idx[1]-1))
tmp <- trim(str_sub(tmp, idx[1], -1))
idx <- str_locate(tmp, "\r")
user <- c(user, str_sub(tmp, 1, idx[1]-1))
tmp <- trim(str_sub(tmp, idx[1], -1))
idx <- str_locate(tmp, "\r")
w_date <- c(w_date, str_sub(tmp, 1, idx[1]-1))
}
}
user
i
avengers1_result <- data.frame(score=c(), review=c(), writer=c(), w_date=c())
write_xlsx(al, path = "D:/workspace/R_Project/01_Crawling/avengers.xlsx")
write_xlsx(avengers1_result, path = "D:/workspace/R_Project/01_Crawling/avengers.xlsx")
avengers1_result
user
avengers1_result <- data.frame(score=c(), review=c(), user=c(), w_date=c())
write_xlsx(avengers1_result, path = "D:/workspace/R_Project/01_Crawling/avengers1.xlsx")
review
score
w_date
avengers1_result <- data.frame(score=c(), review=c(), user=c(), w_date=c())
View(avengers1_result)
user
score
w_date
avengers1_result <- data.frame(score=c(), review=c(), user=c(), w_date=c())
View(avengers1_result)
score  <- c()
review <- c()
user   <- c()
w_date <- c()
for ( i in 1:total_page) {
total_url <- paste0(base_url, page_url, i)
html3 <- read_html(total_url)
html3 %>%
html_node('div.score_result') %>%
html_nodes('li') -> lis
for (li in lis) {
score <- c(score, html_node(li, '.star_score') %>% html_text('em') %>% trim())
li %>%
html_node('.score_reple') %>%
html_text('p') %>%
trim() -> tmp
idx <- str_locate(tmp, "\r")
review <- c(review, str_sub(tmp, 1, idx[1]-1))
tmp <- trim(str_sub(tmp, idx[1], -1))
idx <- str_locate(tmp, "\r")
user <- c(user, str_sub(tmp, 1, idx[1]-1))
tmp <- trim(str_sub(tmp, idx[1], -1))
idx <- str_locate(tmp, "\r")
w_date <- c(w_date, str_sub(tmp, 1, idx[1]-1))
}
}
avengers1_result <- data.frame(score=c(), review=c(), user=c(), w_date=c())
View(avengers1_result)
user
avengers1_result <- data.frame(score=score, review=review, user=user, w_date=w_date)
View(avengers1_result)
write_xlsx(avengers1_result, path = "D:/workspace/R_Project/01_Crawling/avengers1.xlsx")
# 영화 평점 페이지 기본 베이스 url설정 (어벤져스 2)
base_url <- 'https://movie.naver.com'
sub_url <-'/movie/bi/mi/point.nhn?code=98438'
url_1 <- paste0(base_url,sub_url)
html <- read_html(url_1)
# iframe 구조의 hmtl src 가져오기
html %>%
html_node('iframe') %>%
html_attr('src') -> url_2
iframe_url <- paste0(base_url, url_2)
iframe_url
# 평점 페이지 넘어가는 url 수정 (for loop을 돌리기 위해 'page=1' -> 'page='로 넣어주고 i값을 뒤에 대입할 예정(i는 총 리뷰 남긴 데이터 건수)
read_html(iframe_url) %>%
html_node('div.paging') %>%
html_node('a') %>%
html_attr('href') -> page_url_test
page_url <- gsub('page=1', 'page=', page_url_test)
# div class = socore_result <- 평점 정보 lis에 저장
html1 <- read_html(iframe_url)
html1 %>%
html_node('div.score_result') %>%
html_nodes('li') -> lis
# 평점 및 리뷰 남긴 총 데이터 건수만큼 for loop을 돌리기 위한 계산식
html2 <- read_html(iframe_url)
html2 %>%
html_node('div.score_total') %>%
html_nodes('em') -> ems
pages <- ems[2] %>% html_text()
pages <- gsub(",","",pages)
total_page <- ceiling(as.numeric(pages)/10)
total_page
score  <- c()
review <- c()
user   <- c()
w_date <- c()
for ( i in 1:total_page) {
total_url <- paste0(base_url, page_url, i)
html3 <- read_html(total_url)
html3 %>%
html_node('div.score_result') %>%
html_nodes('li') -> lis
for (li in lis) {
score <- c(score, html_node(li, '.star_score') %>% html_text('em') %>% trim())
li %>%
html_node('.score_reple') %>%
html_text('p') %>%
trim() -> tmp
idx <- str_locate(tmp, "\r")
review <- c(review, str_sub(tmp, 1, idx[1]-1))
tmp <- trim(str_sub(tmp, idx[1], -1))
idx <- str_locate(tmp, "\r")
user <- c(user, str_sub(tmp, 1, idx[1]-1))
tmp <- trim(str_sub(tmp, idx[1], -1))
idx <- str_locate(tmp, "\r")
w_date <- c(w_date, str_sub(tmp, 1, idx[1]-1))
}
}
avengers2_result <- data.frame(score=score, review=review, user=user, w_date=w_date)
View(avengers2_result)
write_xlsx(avengers2_result, path = "D:/workspace/R_Project/01_Crawling/avengers2.xlsx")
# 영화 평점 페이지 기본 베이스 url설정 (어벤져스 3)
base_url <- 'https://movie.naver.com'
sub_url <-'/movie/bi/mi/basic.nhn?code=136315'
url_1 <- paste0(base_url,sub_url)
html <- read_html(url_1)
# iframe 구조의 hmtl src 가져오기
html %>%
html_node('iframe') %>%
html_attr('src') -> url_2
iframe_url <- paste0(base_url, url_2)
# 평점 페이지 넘어가는 url 수정 (for loop을 돌리기 위해 'page=1' -> 'page='로 넣어주고 i값을 뒤에 대입할 예정(i는 총 리뷰 남긴 데이터 건수)
read_html(iframe_url) %>%
html_node('div.paging') %>%
html_node('a') %>%
html_attr('href') -> page_url_test
source('D:/workspace/R_Project/01_Crawling/1차_프로젝트_어벤져스.R', encoding = 'UTF-8', echo=TRUE)
iframe_url
iframe_url
# 영화 평점 페이지 기본 베이스 url설정 (어벤져스 3)
base_url <- 'https://movie.naver.com'
sub_url <-'/movie/bi/mi/basic.nhn?code=136315'
url_1
html <- read_html(url_1)
html
# iframe 구조의 hmtl src 가져오기
html %>%
html_node('iframe') %>%
html_attr('src') -> url_2
iframe_url <- paste0(base_url, url_2)
# 평점 페이지 넘어가는 url 수정 (for loop을 돌리기 위해 'page=1' -> 'page='로 넣어주고 i값을 뒤에 대입할 예정(i는 총 리뷰 남긴 데이터 건수)
read_html(iframe_url) %>%
html_node('div.paging') %>%
html_node('a') %>%
html_attr('href') -> page_url_test
page_url <- gsub('page=1', 'page=', page_url_test)
iframe_url
url_1 <- paste0(base_url,sub_url)
url_1
# iframe 구조의 hmtl src 가져오기
html %>%
html_node('iframe') %>%
html_attr('src') -> url_2
iframe_url <- paste0(base_url, url_2)
iframe_url
base_url
url_2
html
url_1 <- paste0(base_url,sub_url)
url_1
# iframe 구조의 hmtl src 가져오기
html %>%
html_node('iframe') %>%
html_attr('src') -> url_2
url_2
library(wordcloud)
library(RColorBrewer)
library(KoNLP)
library(KoNLP)
library(wordcloud)
library(RColorBrewer)
library(KoNLP)
library("wordcloud")
library("RColorBrewer")
library("KoNLP")
knitr::opts_chunk$set(echo = TRUE)
library("wordcloud")
library("RColorBrewer")
library("KoNLP")
head(data)
setwd("D:/workspace/R_Project/01_Crawling")
data <- readLines("a1.txt")
head(data)
useSejongDic
useSejongDic()
head(data)
data2 <- sapply(data,extractNoun.USE.NAMES=F)
sapply()
data2 <- sapply(data,extractNoun.USE.NAMES=F)
data1 <- sapply(data,extractNoun.USE.NAMES=F)
install.packages("tidytext")
library(tidytext)
data1 <- sapply(data, extractNoun, USE.NAMES=F)
head(data1)
data1 <- sapply(data, extractNoun, USE.NAMES=F)
data1 <- sapply(data, extractNoun, USE.NAMES=F)
head(data1)
head(unlist(data1), 30)
data1 <- gsub('\\d+','',data1)
head(unlist(data1), 30)
install.packages("wordcloud2")
library(wordcloud2)
knitr::opts_chunk$set(echo = TRUE)
library("wordcloud")
library("RColorBrewer")
library("KoNLP")
noun2 <- unlist(noun)
data2 <- unlist(data1)
wordcount <- table(data2)
head(data2,5)
setwd("D:/workspace/R_Project/01_Crawling")
data <- readLines("a1.txt")
head(data)
useSejongDic()
knitr::opts_chunk$set(echo = TRUE)
library("wordcloud")
library("RColorBrewer")
library("KoNLP")
useSejongDic()
data1 <- sapply(data, extractNoun, USE.NAMES=F)
head(unlist(data1), 30)
data2 <- unlist(data1)
data2
data3 <- Filter(function(x) {nchar(x) >= 2}, data)
head(data3,5)
data3
data3 <- Filter(function(x) {nchar(x) >= 2}, data2)
data3
wordcount <- table(data3)
data4 <- str_replace_all(data3, "[^[:alpha:]]","''")
library(stringr)
library(wordcloud)
library(RColorBrewer)
library(KoNLP)
library(stringr)
data4 <- str_replace_all(data3, "[^[:alpha:]]","''")
dtata4
data4
data4 <-
data4 <- gsub('\\d+','',data4)
data4 <- gsub(' ','',data4)
data4
wordcount <- table(data3)
data4 <- gsub('\\d+','',data4)
data4 <- gsub(' ','',data4)
data4
data3 <- Filter(function(x) {nchar(x) >= 6}, data2)
data3 <- Filter(function(x) {nchar(x) >= 2}, data2)
data1 <- sapply(data, extractNoun, USE.NAMES=F)
data1 <- sapply(data, extractNoun, USE.NAMES=F)
data2 <- unlist(data1)
data3 <- Filter(function(x) {nchar(x) >= 2}, data2)
data3 <- Filter(function(x) {nchar(x) <= 6}, data3)
data3
data4 <- str_replace_all(data3, "[^[:alpha:]]","''")
data4 <- gsub('\\d+','',data4)
data4 <- gsub(' ','',data4)
data4
data4 <- gsub("'",'',data4)
data4
data <- readLines("avengers_gsub")
data <- readLines("avengers_gsub.txt")
data
gsub <- readLines("avengers_gsub.txt")
gsub_text <- readLines("avengers_gsub.txt")
cnt_txt <- lehgth(gsub_text)
cnt_txt <- length(gsub_text)
i <- 1
i <- 1
for (i in 1:cnt_txt) {
data5 <- gsub((txt[i]),'',data4)
}
data5 <- gsub((gsub_text[i]),'',data4)
data5
gsub_text <- readLines("avengers_gsub.txt")
cnt_txt <- length(gsub_text)
gsub_text <- readLines("avengers_gsub.txt")
gsub_text <- readLines("avengers_gsub.txt")
gsub_text <- readLines("avengers_gsub1.txt")
gsub_text <- readLines("avengers_gsub1.txt")
gsub_text <- readLines("gsub
1.txt")
gsub_text <- readLines("gsub.txt")
library(wordcloud)
library(RColorBrewer)
library(KoNLP)
library(KoNLP)
library(stringr)
useSejongDic()
gsub_text <- readLines("gsub.txt")
gsub_text <- readLines("gsub.txt")
gsub_text <- readLines("avengers_gsub.txt")
gsub_text1 <- readLines("avengers_gsub.txt")
gsub_text <- readLines("gsub.txt")
gsub_text <- readLines("gsub.txt")
gsub_text <- readLines("gsub.txt")
gsub_text <- readLines("gsub.txt")
gsub_text <- readLines("gsub.txt")
gsub_text <- readLines("gsub.txt")
gsub_text <- readLines("gsub.txt")
gsub_text <- readLines("avengers_gsub.txt")
gsub_text <- readLines("avengers_gsub.txt")
gsub_text <- readLines("avengers_gsub.txt")
cnt_txt <- length(gsub_text)
i <- 1
cnt_txt <- length(avengers_gsub)
for (i in 1:cnt_txt) {
data5 <- gsub((gsub_text[i]),'',data4)
}
for (i in 1:cnt_txt) {
data5 <- gsub((gsub_text[i]),'',data4)
}
data5
write(unlist(data5),'avengers_filter.txt')
re_avengers <- read.table("avengers_filter.txt")
nrow(re_avengers)
wordcount <- table(re_avengers)
head(sor(wordcount, decreasing=T),3)
head(sort(wordcount, decreasing=T),30)
data4 <- gsub('ㅋ','',dtata4)
data4 <- gsub("'",'',data4)
data4 <- gsub('ㅋ','',data4)
gsub_text <- readLines("avengers_gsub.txt")
cnt_txt <- length(gsub_text)
i <- 1
for (i in 1:cnt_txt) {
data5 <- gsub((gsub_text[i]),'',data4)
}
for (i in 1:cnt_txt) {
data5 <- gsub((gsub_text[i]),'',data4)
}
write(unlist(data5),'avengers_filter.txt')
re_avengers <- read.table("avengers_filter.txt")
nrow(re_avengers)
write(unlist(data5),'avengers_filter.txt')
re_avengers <- read.table("avengers_filter.txt")
nrow(re_avengers)
wordcount <- table(re_avengers)
head(sort(wordcount, decreasing=T),30)
data4 <- gsub('g','',data4)
gsub_text <- readLines("avengers_gsub.txt")
cnt_txt <- length(gsub_text)
i <- 1
for (i in 1:cnt_txt) {
data5 <- gsub((gsub_text[i]),'',data4)
}
write(unlist(data5),'avengers_filter.txt')
re_avengers <- read.table("avengers_filter.txt")
nrow(re_avengers)
wordcount <- table(re_avengers)
head(sort(wordcount, decreasing=T),30)
data5 <- gsub('ㅎ','',data4)
write(unlist(data5),'avengers_filter.txt')
re_avengers <- read.table("avengers_filter.txt")
nrow(re_avengers)
wordcount <- table(re_avengers)
head(sort(wordcount, decreasing=T),30)
wordcloud2(data=wordcount,fontFamily = '나눔바른고딕')
library(wordcloud2)
wordcloud2(data=wordcount,fontFamily = '나눔바른고딕')
wordcloud2(wordcount,color = "random-light", backgroundColor = "grey")
data4 <- gsub("'",'',data4)
data4 <- gsub('ㅋ','',data4)
data4 <- gsub('ㅎ','',data4)
gsub_text <- readLines("avengers_gsub.txt")
gsub_text <- readLines("avengers_gsub.txt")
cnt_txt <- length(gsub_text)
gsub_text
cnt_txt <- length(gsub_text)
i <- 1
for (i in 1:cnt_txt) {
data5 <- gsub((gsub_text[i]),'',data4)
}
write(unlist(data5),'avengers_filter.txt')
re_avengers <- read.table("avengers_filter.txt")
nrow(re_avengers)
wordcount <- table(re_avengers)
head(sort(wordcount, decreasing=T),30)
gsub_text <- readLines("avengers_gsub.txt")
cnt_txt <- length(gsub_text)
i <- 1
for (i in 1:cnt_txt) {
data5 <- gsub((gsub_text[i]),'',data4)
}
write(unlist(data5),'avengers_filter.txt')
re_avengers <- read.table("avengers_filter.txt")
nrow(re_avengers)
wordcount <- table(re_avengers)
head(sort(wordcount, decreasing=T),30)
data5 <- gsub('영화','',data5)
data5 <- gsub('진짜','',data5)
data5 <- gsub('완전','',data5)
data5 <- gsub('중간','',data5)
data5 <- gsub('이거','',data5)
write(unlist(data5),'avengers_filter.txt')
re_avengers <- read.table("avengers_filter.txt")
nrow(re_avengers)
wordcount <- table(re_avengers)
head(sort(wordcount, decreasing=T),30)
data5 <- gsub('최고','',data5)
data5 <- gsub('최고','',data5)
data5 <- gsub('D로','',data5)
write(unlist(data5),'avengers_filter.txt')
nrow(re_avengers)
wordcount <- table(re_avengers)
head(sort(wordcount, decreasing=T),30)
write(unlist(data5),'avengers_filter.txt')
re_avengers <- read.table("avengers_filter.txt")
nrow(re_avengers)
wordcount <- table(re_avengers)
head(sort(wordcount, decreasing=T),30)
wordcloud2(wordcount,color = "random-light", backgroundColor = "grey")
letterCloud(data=wordcount,word='A',wordSize=1)
letterCloud(wordcount,word='A',wordSize=1)
letterCloud(wordcount,word='A',wordSize=10)
wordcloud2(wordcount,color = "random-light", backgroundColor = "grey")
wordcloud2(data = wordcount,color = "random-dark")
wordcloud2(data = wordcount,color = "random-light", backgroundColor = "grey")
letterCloud(data = wordcount,word='A',wordSize=10)
head(sort(wordcount, decreasing=T),30)
letterCloud(data = wordcount,word='A',wordSize=10)
#wordcloud2(data = wordcount,color = "random-dark")
#wordcloud2(data = wordcount,color = "random-light", backgroundColor = "grey")
letterCloud(data = wordcount,word='A',color = "random-light", backgroundColor = "grey",wordSize=1)
wordcount2 <-head(sort(wordcount, decreasing = T),200)
wordcount2
#wordcloud2(data = wordcount,color = "random-dark")
#wordcloud2(data = wordcount,color = "random-light", backgroundColor = "grey")
letterCloud(data = wordcount2, word='A',color = "random-light", backgroundColor = "grey",wordSize=1)
#wordcloud2(data = wordcount,color = "random-dark")
wordcloud2(data = wordcount2,color = "random-light", backgroundColor = "grey")
write(unlist(data5),'avengers_filter.txt')
re_avengers <- read.table("avengers_filter.txt")
head(data5,30)
head(sort(wordcount, decreasing = T),30)
head(sort(data5, decreasing = T),30)
data5 <- gsub('ㅡㅡ','',data5
data5 <- gsub('ㅡㅡ','',data5)
data5 <- gsub('ㅡㅡ','',data5)
head(sort(data5, decreasing = T),30)
write(unlist(data5),'avengers_filter.txt')
re_avengers <- read.table("avengers_filter.txt")
nrow(re_avengers)
wordcount <- table(re_avengers)
head(sort(wordcount, decreasing = T),30)
wordcount2 <-head(sort(wordcount, decreasing = T),200)
#wordcloud2(data = wordcount,color = "random-dark")
wordcloud2(data = wordcount2,color = "random-light", backgroundColor = "grey")
#wordcloud2(data = wordcount,color = "random-dark")
wordcloud2(data = wordcount2,color = "random-light", backgroundColor = "grey")
knitr::opts_chunk$set(echo = TRUE)
library(wordcloud2)
library(RColorBrewer)
library(KoNLP)
library(stringr)
useSejongDic()
setwd("D:/workspace/R_Project/01_Crawling")
data <- readLines("a2.txt")
head(data)
data1 <- sapply(data, extractNoun, USE.NAMES=F)
data1 <- sapply(data, extractNoun, USE.NAMES=F)
data2 <- unlist(data1)
data3 <- Filter(function(x) {nchar(x) >= 2}, data2)
data3 <- Filter(function(x) {nchar(x) <= 6}, data3)
data <- readLines("a2.txt")
head(data)
data1 <- sapply(data, extractNoun, USE.NAMES=F)
